/*
                     不能买到的数目 
问题描述
小明开了一家糖果店。他别出心裁：把水果糖包成4颗一包和7颗一包的两种。糖果不能拆包卖。

小朋友来买糖的时候，他就用这两种包装来组合。当然有些糖果数目是无法组合出来的，比如要买 10 颗糖。

你可以用计算机测试一下，在这种包装情况下，最大不能买到的数量是17。大于17的任何数字都可以用4和7组合出来。

本题的要求就是在已知两个包装的数量时，求最大不能组合出的数字。

输入格式
两个正整数，表示每种包装中糖的颗数(都不多于1000)

输出格式
一个正整数，表示最大不能买到的糖数

样例输入1
4 7
样例输出1
17
样例输入2
3 5
样例输出2
7
*/
#include <iostream>
//这道题很容易想到的是数论和动态规划的知识来解决 
//我这里提供ACM解题的另一种思路  
//由题，则有a * m + b * n = x假设有解  可得x为a * b的倍数
//要使得满足题意，则，x = a * b,否则，有无穷多解 
using namespace std;
int main(){
	int a, b;
	cin >> a >> b;
	
	//因此，最大不能表示，可转换为求解(a - 1) * (b - 1) 
	cout << a * b - a - b;
	return 0;
} 
